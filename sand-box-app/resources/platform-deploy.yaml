apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform
  labels:
    k8s-app: sandbox-platform
spec:
  replicas: 1
  template:
    metadata:
        annotations:
          vault.hashicorp.com/agent-configmap: "sandbox-platform-secret-configmap"
          vault.hashicorp.com/agent-requests-cpu: "25m"
          vault.hashicorp.com/agent-limits-cpu: "50m"
        labels:
          k8s-app: sandbox-platform   
    spec:
      initContainers:
        - name: init-sqldatabase
          image: mcr.microsoft.com/mssql-tools
          command:
            - "/bin/sh"
            - "-c"
          args:
            - "/opt/mssql-tools/bin/sqlcmd -S $(VC_DB_HOST) -U $(VC_DB_USER)@$(VC_DB_HOST) -P '$(VC_DBSERVER_MASTER_PASSWORD)' -q \"CREATE LOGIN $(VC_INSTANCE)_$(VC_NAMESPACE)_user WITH PASSWORD = '$(VC_DB_PASSWORD)'\"
            && /opt/mssql-tools/bin/sqlcmd -S $(VC_DB_HOST) -U $(VC_DB_USER)@$(VC_DB_HOST) -P '$(VC_DBSERVER_MASTER_PASSWORD)' -q \"CREATE USER $(VC_INSTANCE)_$(VC_NAMESPACE)_user FROM LOGIN $(VC_INSTANCE)_$(VC_NAMESPACE)_user\"
            && /opt/mssql-tools/bin/sqlcmd -S $(VC_DB_HOST) -U $(VC_DB_USER)@$(VC_DB_HOST) -P '$(VC_DBSERVER_MASTER_PASSWORD)' -q \"CREATE DATABASE [$(VC_PLATFORM_SERVICE)_$(VC_NAMESPACE)] $(VC_DB_COPY_PARAM) ( SERVICE_OBJECTIVE = ELASTIC_POOL ( name = [$(VC_DB_POOL)] ) )\""
          env:
            - name: VC_SAMPLE_DATA_DB
              value: webstore-platform_source
            - name: VC_DB_COPY_PARAM
              value: "AS COPY OF [$(VC_SAMPLE_DATA_DB)]"
            - name: VC_DBSERVER_MASTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vc-dbserver-password
                  key: password
            - name: VC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vc-db-pass
                  key: password
        - name: init-platform
          imagePullPolicy: Always
          image: docker.pkg.github.com/virtocommerce/vc-deploy-containers/platform-installer:dev-test
          resources:
            requests:
              cpu: 250m
              memory: "256Mi"
            limits:
              cpu: 250m
              memory: "512Mi"
          command:
            - "/bin/sh"
            - "-c"
          args:
            - "echo START INIT $(date +%Y-%m-%d-%H-%M-%S)
            && python3 install-modules.py \"$MODULES_CONFIG\" /mnt/Modules/*"
        - name: init-dbuser
          image: mcr.microsoft.com/mssql-tools
          command:
            - "/bin/sh"
            - "-c"
          args:
            - "/opt/mssql-tools/bin/sqlcmd -S $(VC_DB_HOST) -U $(VC_DB_USER)@$(VC_DB_HOST) -P '$(VC_DBSERVER_MASTER_PASSWORD)' -d $(VC_PLATFORM_SERVICE)_$(VC_NAMESPACE) -q \"CREATE USER [$(VC_INSTANCE)_$(VC_NAMESPACE)_user] FROM LOGIN [$(VC_INSTANCE)_$(VC_NAMESPACE)_user]; ALTER ROLE db_owner ADD MEMBER [$(VC_INSTANCE)_$(VC_NAMESPACE)_user];\""
          env:
            - name: VC_SAMPLE_DATA_DB
              value: webstore-platform_source  
            - name: VC_DBSERVER_MASTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vc-dbserver-password
                  key: password
            - name: VC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vc-db-pass
                  key: password
      containers:
        - name: vc-platform-web
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 80
          #   failureThreshold: 3
          #   successThreshold: 1
          #   initialDelaySeconds: 10
          #   periodSeconds: 1
          env:
          - name: VC_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: vc-db-pass
                key: password
          - name: ConnectionStrings__VirtoCommerce
            value: "Server=tcp:$(VC_DB_HOST),1433;Database=$(VC_PLATFORM_SERVICE)_$(VC_NAMESPACE);User ID=$(VC_INSTANCE)_$(VC_NAMESPACE)_user@$(VC_DB_HOST);Password=$(VC_DB_PASSWORD);Trusted_Connection=False;Encrypt=True;"
          resources:
            requests:
              cpu: 125m
              memory: "256Mi"
            limits:
              cpu: 125m
              memory: "512Mi"
      nodeSelector:
        agentpool: agentpool
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate

          